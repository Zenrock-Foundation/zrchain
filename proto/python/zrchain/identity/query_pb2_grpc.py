# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from zrchain.identity import query_pb2 as zrchain_dot_identity_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Params = channel.unary_unary(
                '/zrchain.identity.Query/Params',
                request_serializer=zrchain_dot_identity_dot_query__pb2.QueryParamsRequest.SerializeToString,
                response_deserializer=zrchain_dot_identity_dot_query__pb2.QueryParamsResponse.FromString,
                )
        self.Workspaces = channel.unary_unary(
                '/zrchain.identity.Query/Workspaces',
                request_serializer=zrchain_dot_identity_dot_query__pb2.QueryWorkspacesRequest.SerializeToString,
                response_deserializer=zrchain_dot_identity_dot_query__pb2.QueryWorkspacesResponse.FromString,
                )
        self.WorkspaceByAddress = channel.unary_unary(
                '/zrchain.identity.Query/WorkspaceByAddress',
                request_serializer=zrchain_dot_identity_dot_query__pb2.QueryWorkspaceByAddressRequest.SerializeToString,
                response_deserializer=zrchain_dot_identity_dot_query__pb2.QueryWorkspaceByAddressResponse.FromString,
                )
        self.Keyrings = channel.unary_unary(
                '/zrchain.identity.Query/Keyrings',
                request_serializer=zrchain_dot_identity_dot_query__pb2.QueryKeyringsRequest.SerializeToString,
                response_deserializer=zrchain_dot_identity_dot_query__pb2.QueryKeyringsResponse.FromString,
                )
        self.KeyringByAddress = channel.unary_unary(
                '/zrchain.identity.Query/KeyringByAddress',
                request_serializer=zrchain_dot_identity_dot_query__pb2.QueryKeyringByAddressRequest.SerializeToString,
                response_deserializer=zrchain_dot_identity_dot_query__pb2.QueryKeyringByAddressResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def Params(self, request, context):
        """Parameters queries the parameters of the module.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Workspaces(self, request, context):
        """Queries a list of Workspaces items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WorkspaceByAddress(self, request, context):
        """Queries a list of WorkspaceByAddress items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Keyrings(self, request, context):
        """Queries a list of Keyrings items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KeyringByAddress(self, request, context):
        """Queries a list of KeyringByAddress items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Params': grpc.unary_unary_rpc_method_handler(
                    servicer.Params,
                    request_deserializer=zrchain_dot_identity_dot_query__pb2.QueryParamsRequest.FromString,
                    response_serializer=zrchain_dot_identity_dot_query__pb2.QueryParamsResponse.SerializeToString,
            ),
            'Workspaces': grpc.unary_unary_rpc_method_handler(
                    servicer.Workspaces,
                    request_deserializer=zrchain_dot_identity_dot_query__pb2.QueryWorkspacesRequest.FromString,
                    response_serializer=zrchain_dot_identity_dot_query__pb2.QueryWorkspacesResponse.SerializeToString,
            ),
            'WorkspaceByAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.WorkspaceByAddress,
                    request_deserializer=zrchain_dot_identity_dot_query__pb2.QueryWorkspaceByAddressRequest.FromString,
                    response_serializer=zrchain_dot_identity_dot_query__pb2.QueryWorkspaceByAddressResponse.SerializeToString,
            ),
            'Keyrings': grpc.unary_unary_rpc_method_handler(
                    servicer.Keyrings,
                    request_deserializer=zrchain_dot_identity_dot_query__pb2.QueryKeyringsRequest.FromString,
                    response_serializer=zrchain_dot_identity_dot_query__pb2.QueryKeyringsResponse.SerializeToString,
            ),
            'KeyringByAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.KeyringByAddress,
                    request_deserializer=zrchain_dot_identity_dot_query__pb2.QueryKeyringByAddressRequest.FromString,
                    response_serializer=zrchain_dot_identity_dot_query__pb2.QueryKeyringByAddressResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'zrchain.identity.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def Params(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zrchain.identity.Query/Params',
            zrchain_dot_identity_dot_query__pb2.QueryParamsRequest.SerializeToString,
            zrchain_dot_identity_dot_query__pb2.QueryParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Workspaces(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zrchain.identity.Query/Workspaces',
            zrchain_dot_identity_dot_query__pb2.QueryWorkspacesRequest.SerializeToString,
            zrchain_dot_identity_dot_query__pb2.QueryWorkspacesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WorkspaceByAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zrchain.identity.Query/WorkspaceByAddress',
            zrchain_dot_identity_dot_query__pb2.QueryWorkspaceByAddressRequest.SerializeToString,
            zrchain_dot_identity_dot_query__pb2.QueryWorkspaceByAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Keyrings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zrchain.identity.Query/Keyrings',
            zrchain_dot_identity_dot_query__pb2.QueryKeyringsRequest.SerializeToString,
            zrchain_dot_identity_dot_query__pb2.QueryKeyringsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KeyringByAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zrchain.identity.Query/KeyringByAddress',
            zrchain_dot_identity_dot_query__pb2.QueryKeyringByAddressRequest.SerializeToString,
            zrchain_dot_identity_dot_query__pb2.QueryKeyringByAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
