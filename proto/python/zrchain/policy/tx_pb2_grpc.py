# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from zrchain.policy import tx_pb2 as zrchain_dot_policy_dot_tx__pb2


class MsgStub(object):
    """Msg defines the Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateParams = channel.unary_unary(
                '/zrchain.policy.Msg/UpdateParams',
                request_serializer=zrchain_dot_policy_dot_tx__pb2.MsgUpdateParams.SerializeToString,
                response_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgUpdateParamsResponse.FromString,
                )
        self.NewPolicy = channel.unary_unary(
                '/zrchain.policy.Msg/NewPolicy',
                request_serializer=zrchain_dot_policy_dot_tx__pb2.MsgNewPolicy.SerializeToString,
                response_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgNewPolicyResponse.FromString,
                )
        self.RevokeAction = channel.unary_unary(
                '/zrchain.policy.Msg/RevokeAction',
                request_serializer=zrchain_dot_policy_dot_tx__pb2.MsgRevokeAction.SerializeToString,
                response_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgRevokeActionResponse.FromString,
                )
        self.ApproveAction = channel.unary_unary(
                '/zrchain.policy.Msg/ApproveAction',
                request_serializer=zrchain_dot_policy_dot_tx__pb2.MsgApproveAction.SerializeToString,
                response_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgApproveActionResponse.FromString,
                )
        self.AddSignMethod = channel.unary_unary(
                '/zrchain.policy.Msg/AddSignMethod',
                request_serializer=zrchain_dot_policy_dot_tx__pb2.MsgAddSignMethod.SerializeToString,
                response_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgAddSignMethodResponse.FromString,
                )
        self.RemoveSignMethod = channel.unary_unary(
                '/zrchain.policy.Msg/RemoveSignMethod',
                request_serializer=zrchain_dot_policy_dot_tx__pb2.MsgRemoveSignMethod.SerializeToString,
                response_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgRemoveSignMethodResponse.FromString,
                )
        self.AddMultiGrant = channel.unary_unary(
                '/zrchain.policy.Msg/AddMultiGrant',
                request_serializer=zrchain_dot_policy_dot_tx__pb2.MsgAddMultiGrant.SerializeToString,
                response_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgAddMultiGrantResponse.FromString,
                )
        self.RemoveMultiGrant = channel.unary_unary(
                '/zrchain.policy.Msg/RemoveMultiGrant',
                request_serializer=zrchain_dot_policy_dot_tx__pb2.MsgRemoveMultiGrant.SerializeToString,
                response_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgRemoveMultiGrantResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the Msg service.
    """

    def UpdateParams(self, request, context):
        """UpdateParams defines the operation for updating the module
        parameters. The authority defaults to the x/gov module account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewPolicy(self, request, context):
        """NewPolicy defines the operation for creating a new policy.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeAction(self, request, context):
        """RevokeAction defines the operation for revoking an action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApproveAction(self, request, context):
        """ApproveAction defines the operation for approving an action.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddSignMethod(self, request, context):
        """AddSignMethod defines the operation for adding a sign method.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveSignMethod(self, request, context):
        """RemoveSignMethod defines the operation for removing a sign method.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMultiGrant(self, request, context):
        """AddMultiGrant defines the operation for adding multiple grants
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveMultiGrant(self, request, context):
        """RemoveMultiGrant defines the operation for removing multiple grants
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateParams': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateParams,
                    request_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgUpdateParams.FromString,
                    response_serializer=zrchain_dot_policy_dot_tx__pb2.MsgUpdateParamsResponse.SerializeToString,
            ),
            'NewPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.NewPolicy,
                    request_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgNewPolicy.FromString,
                    response_serializer=zrchain_dot_policy_dot_tx__pb2.MsgNewPolicyResponse.SerializeToString,
            ),
            'RevokeAction': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeAction,
                    request_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgRevokeAction.FromString,
                    response_serializer=zrchain_dot_policy_dot_tx__pb2.MsgRevokeActionResponse.SerializeToString,
            ),
            'ApproveAction': grpc.unary_unary_rpc_method_handler(
                    servicer.ApproveAction,
                    request_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgApproveAction.FromString,
                    response_serializer=zrchain_dot_policy_dot_tx__pb2.MsgApproveActionResponse.SerializeToString,
            ),
            'AddSignMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSignMethod,
                    request_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgAddSignMethod.FromString,
                    response_serializer=zrchain_dot_policy_dot_tx__pb2.MsgAddSignMethodResponse.SerializeToString,
            ),
            'RemoveSignMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveSignMethod,
                    request_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgRemoveSignMethod.FromString,
                    response_serializer=zrchain_dot_policy_dot_tx__pb2.MsgRemoveSignMethodResponse.SerializeToString,
            ),
            'AddMultiGrant': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMultiGrant,
                    request_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgAddMultiGrant.FromString,
                    response_serializer=zrchain_dot_policy_dot_tx__pb2.MsgAddMultiGrantResponse.SerializeToString,
            ),
            'RemoveMultiGrant': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveMultiGrant,
                    request_deserializer=zrchain_dot_policy_dot_tx__pb2.MsgRemoveMultiGrant.FromString,
                    response_serializer=zrchain_dot_policy_dot_tx__pb2.MsgRemoveMultiGrantResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'zrchain.policy.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the Msg service.
    """

    @staticmethod
    def UpdateParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zrchain.policy.Msg/UpdateParams',
            zrchain_dot_policy_dot_tx__pb2.MsgUpdateParams.SerializeToString,
            zrchain_dot_policy_dot_tx__pb2.MsgUpdateParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zrchain.policy.Msg/NewPolicy',
            zrchain_dot_policy_dot_tx__pb2.MsgNewPolicy.SerializeToString,
            zrchain_dot_policy_dot_tx__pb2.MsgNewPolicyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zrchain.policy.Msg/RevokeAction',
            zrchain_dot_policy_dot_tx__pb2.MsgRevokeAction.SerializeToString,
            zrchain_dot_policy_dot_tx__pb2.MsgRevokeActionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApproveAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zrchain.policy.Msg/ApproveAction',
            zrchain_dot_policy_dot_tx__pb2.MsgApproveAction.SerializeToString,
            zrchain_dot_policy_dot_tx__pb2.MsgApproveActionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddSignMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zrchain.policy.Msg/AddSignMethod',
            zrchain_dot_policy_dot_tx__pb2.MsgAddSignMethod.SerializeToString,
            zrchain_dot_policy_dot_tx__pb2.MsgAddSignMethodResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveSignMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zrchain.policy.Msg/RemoveSignMethod',
            zrchain_dot_policy_dot_tx__pb2.MsgRemoveSignMethod.SerializeToString,
            zrchain_dot_policy_dot_tx__pb2.MsgRemoveSignMethodResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddMultiGrant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zrchain.policy.Msg/AddMultiGrant',
            zrchain_dot_policy_dot_tx__pb2.MsgAddMultiGrant.SerializeToString,
            zrchain_dot_policy_dot_tx__pb2.MsgAddMultiGrantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveMultiGrant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/zrchain.policy.Msg/RemoveMultiGrant',
            zrchain_dot_policy_dot_tx__pb2.MsgRemoveMultiGrant.SerializeToString,
            zrchain_dot_policy_dot_tx__pb2.MsgRemoveMultiGrantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
