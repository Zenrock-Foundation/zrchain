# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ibc.applications.transfer.v2 import queryv2_pb2 as ibc_dot_applications_dot_transfer_dot_v2_dot_queryv2__pb2


class QueryV2Stub(object):
    """QueryV2 provides defines the gRPC querier service for ics20-v2.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Denoms = channel.unary_unary(
                '/ibc.applications.transfer.v2.QueryV2/Denoms',
                request_serializer=ibc_dot_applications_dot_transfer_dot_v2_dot_queryv2__pb2.QueryDenomsRequest.SerializeToString,
                response_deserializer=ibc_dot_applications_dot_transfer_dot_v2_dot_queryv2__pb2.QueryDenomsResponse.FromString,
                )
        self.Denom = channel.unary_unary(
                '/ibc.applications.transfer.v2.QueryV2/Denom',
                request_serializer=ibc_dot_applications_dot_transfer_dot_v2_dot_queryv2__pb2.QueryDenomRequest.SerializeToString,
                response_deserializer=ibc_dot_applications_dot_transfer_dot_v2_dot_queryv2__pb2.QueryDenomResponse.FromString,
                )


class QueryV2Servicer(object):
    """QueryV2 provides defines the gRPC querier service for ics20-v2.
    """

    def Denoms(self, request, context):
        """Denoms queries all denominations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Denom(self, request, context):
        """Denom queries a denomination
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryV2Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Denoms': grpc.unary_unary_rpc_method_handler(
                    servicer.Denoms,
                    request_deserializer=ibc_dot_applications_dot_transfer_dot_v2_dot_queryv2__pb2.QueryDenomsRequest.FromString,
                    response_serializer=ibc_dot_applications_dot_transfer_dot_v2_dot_queryv2__pb2.QueryDenomsResponse.SerializeToString,
            ),
            'Denom': grpc.unary_unary_rpc_method_handler(
                    servicer.Denom,
                    request_deserializer=ibc_dot_applications_dot_transfer_dot_v2_dot_queryv2__pb2.QueryDenomRequest.FromString,
                    response_serializer=ibc_dot_applications_dot_transfer_dot_v2_dot_queryv2__pb2.QueryDenomResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ibc.applications.transfer.v2.QueryV2', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QueryV2(object):
    """QueryV2 provides defines the gRPC querier service for ics20-v2.
    """

    @staticmethod
    def Denoms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ibc.applications.transfer.v2.QueryV2/Denoms',
            ibc_dot_applications_dot_transfer_dot_v2_dot_queryv2__pb2.QueryDenomsRequest.SerializeToString,
            ibc_dot_applications_dot_transfer_dot_v2_dot_queryv2__pb2.QueryDenomsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Denom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ibc.applications.transfer.v2.QueryV2/Denom',
            ibc_dot_applications_dot_transfer_dot_v2_dot_queryv2__pb2.QueryDenomRequest.SerializeToString,
            ibc_dot_applications_dot_transfer_dot_v2_dot_queryv2__pb2.QueryDenomResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
