// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: zrchain/treasury/wallet.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// WalletType specifies the Layer 1 blockchain that this wallet will be used
// for.
type WalletType int32

const (
	// The wallet type is missing (all wallets will be derived)
	WalletType_WALLET_TYPE_UNSPECIFIED WalletType = 0
	// The wallet type for native cosmos accounts
	WalletType_WALLET_TYPE_NATIVE WalletType = 1
	// The wallet type for mainnet ETH and its ERC-20 tokens
	WalletType_WALLET_TYPE_EVM WalletType = 2
	// The Wallet type for Testnet BTC
	WalletType_WALLET_TYPE_BTC_TESTNET WalletType = 3
	// The Wallet type for Mainnet BTC
	WalletType_WALLET_TYPE_BTC_MAINNET WalletType = 4
	// The Wallet type for RegNet - Local Test Network
	WalletType_WALLET_TYPE_BTC_REGNET WalletType = 5
	// Wallet type for Solana
	WalletType_WALLET_TYPE_SOLANA WalletType = 6
)

var WalletType_name = map[int32]string{
	0: "WALLET_TYPE_UNSPECIFIED",
	1: "WALLET_TYPE_NATIVE",
	2: "WALLET_TYPE_EVM",
	3: "WALLET_TYPE_BTC_TESTNET",
	4: "WALLET_TYPE_BTC_MAINNET",
	5: "WALLET_TYPE_BTC_REGNET",
	6: "WALLET_TYPE_SOLANA",
}

var WalletType_value = map[string]int32{
	"WALLET_TYPE_UNSPECIFIED": 0,
	"WALLET_TYPE_NATIVE":      1,
	"WALLET_TYPE_EVM":         2,
	"WALLET_TYPE_BTC_TESTNET": 3,
	"WALLET_TYPE_BTC_MAINNET": 4,
	"WALLET_TYPE_BTC_REGNET":  5,
	"WALLET_TYPE_SOLANA":      6,
}

func (x WalletType) String() string {
	return proto.EnumName(WalletType_name, int32(x))
}

func (WalletType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5f15aad2fa43c310, []int{0}
}

func init() {
	proto.RegisterEnum("zrchain.treasury.WalletType", WalletType_name, WalletType_value)
}

func init() { proto.RegisterFile("zrchain/treasury/wallet.proto", fileDescriptor_5f15aad2fa43c310) }

var fileDescriptor_5f15aad2fa43c310 = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xad, 0x2a, 0x4a, 0xce,
	0x48, 0xcc, 0xcc, 0xd3, 0x2f, 0x29, 0x4a, 0x4d, 0x2c, 0x2e, 0x2d, 0xaa, 0xd4, 0x2f, 0x4f, 0xcc,
	0xc9, 0x49, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x80, 0x4a, 0xeb, 0xc1, 0xa4,
	0xb5, 0x8e, 0x30, 0x72, 0x71, 0x85, 0x83, 0x95, 0x84, 0x54, 0x16, 0xa4, 0x0a, 0x49, 0x73, 0x89,
	0x87, 0x3b, 0xfa, 0xf8, 0xb8, 0x86, 0xc4, 0x87, 0x44, 0x06, 0xb8, 0xc6, 0x87, 0xfa, 0x05, 0x07,
	0xb8, 0x3a, 0x7b, 0xba, 0x79, 0xba, 0xba, 0x08, 0x30, 0x08, 0x89, 0x71, 0x09, 0x21, 0x4b, 0xfa,
	0x39, 0x86, 0x78, 0x86, 0xb9, 0x0a, 0x30, 0x0a, 0x09, 0x73, 0xf1, 0x23, 0x8b, 0xbb, 0x86, 0xf9,
	0x0a, 0x30, 0xa1, 0x9b, 0xe4, 0x14, 0xe2, 0x1c, 0x1f, 0xe2, 0x1a, 0x1c, 0xe2, 0xe7, 0x1a, 0x22,
	0xc0, 0x8c, 0x4d, 0xd2, 0xd7, 0xd1, 0xd3, 0x0f, 0x24, 0xc9, 0x22, 0x24, 0xc5, 0x25, 0x86, 0x2e,
	0x19, 0xe4, 0xea, 0x0e, 0x92, 0x63, 0x45, 0x77, 0x42, 0xb0, 0xbf, 0x8f, 0xa3, 0x9f, 0xa3, 0x00,
	0x9b, 0x53, 0xc8, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38,
	0xe1, 0xb1, 0x1c, 0xc3, 0x85, 0xc7, 0x72, 0x0c, 0x37, 0x1e, 0xcb, 0x31, 0x44, 0x59, 0xa5, 0x67,
	0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea, 0x57, 0xa5, 0xe6, 0x15, 0xe5, 0x27, 0x67,
	0xe7, 0x24, 0x26, 0x15, 0xc3, 0xd8, 0xfa, 0xb0, 0x00, 0x2b, 0x33, 0xd1, 0xaf, 0x40, 0x84, 0x5a,
	0x49, 0x65, 0x41, 0x6a, 0x71, 0x12, 0x1b, 0x38, 0xd4, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x0d, 0x53, 0x23, 0x70, 0x56, 0x01, 0x00, 0x00,
}
